# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ü–µ–Ω –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –æ–±—É—á–µ–Ω–∏—è

PRICING_CONFIG = {
    # –û–ì–≠ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    'oge_9': {
        'name': 'üíØ–û–ì–≠(9 –∫–ª–∞—Å—Å)',
        'price': 5650,
        'description': '2 —á–∞—Å–∞ / 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        'keywords': ['9', 'oge', '–æ–≥—ç', '9 –∫–ª–∞—Å—Å']
    },
    'ege_base': {
        'name': 'üíØ–ï–ì–≠ –ë–∞–∑–∞',
        'price': 5650,
        'description': '2 —á–∞—Å–∞ / 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        'keywords': ['–µ–≥—ç –±–∞–∑–∞', 'ege base', '–±–∞–∑–∞']
    },
    'class_7': {
        'name': 'üíØ7 –∫–ª–∞—Å—Å',
        'price': 5650,
        'description': '2 —á–∞—Å–∞ / 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        'keywords': ['7', '7 –∫–ª–∞—Å—Å']
    },
    'class_8': {
        'name': 'üíØ8 –∫–ª–∞—Å—Å (–ê–ª–≥–µ–±—Ä–∞ + –ì–µ–æ–º–µ—Ç—Ä–∏—è)',
        'price': 5650,
        'description': '2 —á–∞—Å–∞ / 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        'keywords': ['8', '8 –∫–ª–∞—Å—Å']
    },
    
    # –ï–ì–≠ –ü—Ä–æ—Ñ–∏–ª—å
    'ege_profile': {
        'name': 'üíØ–ï–ì–≠ –ü—Ä–æ—Ñ–∏–ª—å 11 –∫–ª–∞—Å—Å',
        'price': 7900,
        'description': '4 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é + –¥–æ–º.–∑–∞–¥–∞–Ω–∏—è + –≤–æ–∑–º–æ–∂–Ω–æ Zoom –æ–Ω–ª–∞–π–Ω –∑–∞–Ω—è—Ç–∏–µ 1 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é',
        'keywords': ['11', '11 –∫–ª–∞—Å—Å', '–µ–≥—ç –ø—Ä–æ—Ñ–∏–ª—å', 'ege profile', '–ø—Ä–æ—Ñ–∏–ª—å']
    },
    
    # 10 –∫–ª–∞—Å—Å
    'class_10': {
        'name': 'üíØ10 –∫–ª–∞—Å—Å',
        'price': 7000,
        'description': '3 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é',
        'keywords': ['10', '10 –∫–ª–∞—Å—Å']
    },
    
    # –ú–ª–∞–¥—à–∏–µ –∫–ª–∞—Å—Å—ã
    'class_5_6': {
        'name': 'üíØ5, 6 –∫–ª–∞—Å—Å',
        'price': 3670,
        'description': '1 —á–∞—Å / 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        'keywords': ['5', '6', '5 –∫–ª–∞—Å—Å', '6 –∫–ª–∞—Å—Å']
    }
}

def get_price_by_class(class_info):
    """
    –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        class_info (str): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Å–µ/–∫—É—Ä—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ü–µ–Ω–µ –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    """
    if not class_info:
        return None
    
    class_info_lower = class_info.lower().strip()
    
    for price_key, price_data in PRICING_CONFIG.items():
        for keyword in price_data['keywords']:
            if keyword in class_info_lower:
                return {
                    'key': price_key,
                    'name': price_data['name'],
                    'price': price_data['price'],
                    'description': price_data['description']
                }
    
    return None

def get_all_price_options():
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ü–µ–Ω
    
    Returns:
        list: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–Ω–æ–≤—ã—Ö –ø–ª–∞–Ω–æ–≤
    """
    return [
        {
            'key': key,
            'name': data['name'],
            'price': data['price'],
            'description': data['description']
        }
        for key, data in PRICING_CONFIG.items()
    ]

# –¢–µ—Å—Ç–æ–≤–∞—è —Ü–µ–Ω–∞ (1 —Ä—É–±–ª—å) –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
TEST_PRICE = 1 